- name: Create service for {{ container_name }}
  copy:
    dest: /etc/systemd/system/{{ container_name }}.service
    content: |
        [Unit]

        [Service]
        Restart=on-failure

        {% if container_user | default(False) %}
          {% set pidfile = "/run/" + container_user + "/%n-pid" %}
        {% else %}
          {% set pidfile = "/%t/%n-pid" %}
        {% endif %}

        PIDFile={{ pidfile }}

        # Run only if run as user
        {% if container_user | default(False) %}
        User={{ container_user }}
        ExecStartPre=+sh -c "if ! test -d /run/{{ container_user }};    \
                then mkdir /run/{{ container_user }};                   \
                chown {{ container_user }}:{{ container_user }}         \
                /run/{{ container_user }};                              \
                fi"
        {% endif %}

        {% set podman = "/usr/bin/podman" %}

        ExecStartPre=-{{ podman }} rm {{ container_name }}
        ExecStart={{ podman }} run              \
            --conmon-pidfile {{ pidfile }}      \
            {{ container_options }}             \
            --name {{ container_name }}         \
            {{ container_image }}               \
            {{ container_command }}

        [Install]
        WantedBy=multi-user.target
  register: container_unit

- name: reload systemd unit
  command: systemctl daemon-reload
  when: container_unit.changed

- name: restart {{ container_name }} if unit changed
  when: container_unit.changed
  service:
    name: "{{ container_name }}"
    state: restarted

- name: start {{ container_name }} if necessary
  service:
    name: "{{ container_name }}"
    state: started
    enabled: true

